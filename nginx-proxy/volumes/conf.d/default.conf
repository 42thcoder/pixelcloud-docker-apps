# If we receive X-Forwarded-Proto, pass it through; otherwise, pass along the
# scheme used to connect to this server
map $http_x_forwarded_proto $proxy_x_forwarded_proto {
  default $http_x_forwarded_proto;
  ''      $scheme;
}
# If we receive Upgrade, set Connection to "upgrade"; otherwise, delete any
# Connection header that may have been passed to this server
map $http_upgrade $proxy_connection {
  default upgrade;
  '' close;
}
log_format vhost '$host $remote_addr - $remote_user [$time_local] '
                 '"$request" $status $body_bytes_sent '
                 '"$http_referer" "$http_user_agent"';
access_log off;
server {
    server_name _; # This is just an invalid value which will never trigger on a real hostname.
    listen 80 deferred;
    listen [::]:80 deferred;
    access_log /var/log/nginx/access.log vhost;
    return 503;
}
server {
    server_name _; # This is just an invalid value which will never trigger on a real hostname.
    listen 443 ssl http2 deferred;
    listen [::]:443 ssl http2 deferred;
    access_log /var/log/nginx/access.log vhost;
    include boilerplate/enable/ssl.conf;
    ssl_certificate certs/default.crt;
    ssl_certificate_key certs/default.key;
    return 503;
}
